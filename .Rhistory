dt <- 10
simula <- tibble(epsilon=rnorm(n),dS=S0*mu_2020*dt+S0*sigma_2020*sqrt(dt)*epsilon)
PE_10 <- S0+mean(simula$dS)
PE_10
Media_DS <- mean(simula$dS)
DeSt_DS <- as.numeric(sqrt(var(simula$dS)))
Z <- qnorm(.975)
P_Sup_10 <- S0+Media_DS+Z*DeSt_DS
P_Inf_10 <- S0+Media_DS-Z*DeSt_DS
P_Sup_10
P_Inf_10
S0
n <- 10000
dt <- 20
simula <- tibble(epsilon=rnorm(n),dS=S0*mu_2020*dt+S0*sigma_2020*sqrt(dt)*epsilon)
PE_20 <- S0+mean(simula$dS)
PE_20
Media_DS <- mean(simula$dS)
DeSt_DS <- as.numeric(sqrt(var(simula$dS)))
Z <- qnorm(.975)
P_Sup_20 <- S0+Media_DS+Z*DeSt_DS
P_Inf_20 <- S0+Media_DS-Z*DeSt_DS
P_Sup_20
P_Inf_20
S0
n <- 10000
dt <- 40
simula <- tibble(epsilon=rnorm(n),dS=S0*mu_2020*dt+S0*sigma_2020*sqrt(dt)*epsilon)
PE_40 <- S0+mean(simula$dS)
PE_40
Media_DS <- mean(simula$dS)
DeSt_DS <- as.numeric(sqrt(var(simula$dS)))
Z <- qnorm(.975)
P_Sup_40 <- S0+Media_DS+Z*DeSt_DS
P_Inf_40 <- S0+Media_DS-Z*DeSt_DS
P_Sup_40
P_Inf_40
S0
resumen <- tibble(Diez <- c(PE_10,P_Sup_10,P_Inf_10),
Veinte <- c(PE_20,P_Sup_20,P_Inf_20),
Cuarenta <- c(PE_40,P_Sup_40,P_Inf_40),
.name_repair = ~ c("Diez días","Veinte días","Cuarenta días"))
resumen <- as.data.frame(resumen)
rownames(resumen) <- c("Valor esperado","Superior 95%","Inferior 95%")
resumen
mu_2020_a <- mean(rendimiento[year(rendimiento)==2020])*252
sigma_2020_a <- sqrt(var(rendimiento[year(rendimiento)==2020])*252)
print(mu_2020_a)
print("rendimiento esperado anual")
print(sigma_2020_a)
print("volatilidad anual")
d <- length(rendimiento)
lns0 <- as.numeric(log(precio[d]))
lns0
n <- 10000
dt <- 1/4
simula2 <- tibble(epsilon=rnorm(n),lnS=(mu_2020_a-(1/2)*sigma_2020_a**2)*dt+sigma_2020_a*sqrt(dt)*epsilon)
PE_3 <- lns0+mean(simula2$lnS)
PE_3
Media_DS <- mean(simula2$lnS)
DeSt_DS <- as.numeric(sqrt(var(simula2$lnS)))
Z <- qnorm(.975)
P_Sup_3 <- lns0+Media_DS+Z*DeSt_DS
P_Inf_3 <- lns0+Media_DS-Z*DeSt_DS
P_Sup_3
P_Inf_3
lns0
n <- 10000
dt <- 1/2
simula2 <- tibble(epsilon=rnorm(n),lnS=(mu_2020_a-(1/2)*sigma_2020_a**2)*dt+sigma_2020_a*sqrt(dt)*epsilon)
PE_6 <- lns0+mean(simula2$lnS)
PE_6
Media_DS <- mean(simula2$lnS)
DeSt_DS <- as.numeric(sqrt(var(simula2$lnS)))
Z <- qnorm(.975)
P_Sup_6 <- lns0+Media_DS+Z*DeSt_DS
P_Inf_6 <- lns0+Media_DS-Z*DeSt_DS
P_Sup_6
P_Inf_6
lns0
n <- 10000
dt <- 3/4
simula2 <- tibble(epsilon=rnorm(n),lnS=(mu_2020_a-(1/2)*sigma_2020_a**2)*dt+sigma_2020_a*sqrt(dt)*epsilon)
PE_9 <- lns0+mean(simula2$lnS)
PE_9
Media_DS <- mean(simula2$lnS)
DeSt_DS <- as.numeric(sqrt(var(simula2$lnS)))
Z <- qnorm(.975)
P_Sup_9 <- lns0+Media_DS+Z*DeSt_DS
P_Inf_9 <- lns0+Media_DS-Z*DeSt_DS
P_Sup_9
P_Inf_9
lns0
n <- 10000
dt <- 1
simula2 <- tibble(epsilon=rnorm(n),lnS=(mu_2020_a-(1/2)*sigma_2020_a**2)*dt+sigma_2020_a*sqrt(dt)*epsilon)
PE_12 <- lns0+mean(simula2$lnS)
PE_12
Media_DS <- mean(simula2$lnS)
DeSt_DS <- as.numeric(sqrt(var(simula2$lnS)))
Z <- qnorm(.975)
P_Sup_12 <- lns0+Media_DS+Z*DeSt_DS
P_Inf_12 <- lns0+Media_DS-Z*DeSt_DS
P_Sup_12
P_Inf_12
lns0
resumen <- tibble(Tres <- c(PE_3,P_Sup_3,P_Inf_3),
Seis <- c(PE_6,P_Sup_6,P_Inf_6),
Nueve <- c(PE_9,P_Sup_9,P_Inf_9),
Doce <- c(PE_12,P_Sup_12,P_Inf_12),
.name_repair = ~ c("Tres meses","Seis meses","Nueve meses","Doce meses"))
resumen <- as.data.frame(resumen)
rownames(resumen) <- c("Valor esperado","Superior 95%","Inferior 95%")
resumen
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
Rendimiento<-na.omit(diff(log(precio)))
independencia <- Box.test(precio,lag=1,type="Ljung-Box",fitdf = 0)
independencia$statistic
independencia <- Box.test(precio,lag=1,type="Ljung-Box",fitdf = 0)
independencia$statistic
independencia <- Box.test(precio,lag=1,type="Ljung-Box",fitdf = 0)
independencia$statistic
garch11 <- garchFit(formula = ~garch(1,1),data = Rendimiento, cond.dist = "norm")
garch12 <- garchFit(formula = ~garch(1,2),data = Rendimiento, cond.dist = "norm")
garch21 <- garchFit(formula = ~garch(2,1),data = Rendimiento, cond.dist = "norm")
garch22 <- garchFit(formula = ~garch(2,2),data = Rendimiento, cond.dist = "norm")
garch10 <- garchFit(formula = ~garch(1,0),data = Rendimiento, cond.dist = "norm")
garch20 <- garchFit(formula = ~garch(2,0),data = Rendimiento, cond.dist = "norm")
garch11
garch11 <- garchFit(formula = ~garch(1,1),data = Rendimiento, cond.dist = "norm")
garch12 <- garchFit(formula = ~garch(1,2),data = Rendimiento, cond.dist = "norm")
garch21 <- garchFit(formula = ~garch(2,1),data = Rendimiento, cond.dist = "norm")
garch22 <- garchFit(formula = ~garch(2,2),data = Rendimiento, cond.dist = "norm")
garch10 <- garchFit(formula = ~garch(1,0),data = Rendimiento, cond.dist = "norm")
garch20 <- garchFit(formula = ~garch(2,0),data = Rendimiento, cond.dist = "norm")
garch11
garch11 <- garchFit(formula = ~garch(1,1),data = Rendimiento, cond.dist = "norm")
garch12 <- garchFit(formula = ~garch(1,2),data = Rendimiento, cond.dist = "norm")
garch21 <- garchFit(formula = ~garch(2,1),data = Rendimiento, cond.dist = "norm")
garch22 <- garchFit(formula = ~garch(2,2),data = Rendimiento, cond.dist = "norm")
garch10 <- garchFit(formula = ~garch(1,0),data = Rendimiento, cond.dist = "norm")
garch20 <- garchFit(formula = ~garch(2,0),data = Rendimiento, cond.dist = "norm")
resumen <- tibble(VV_L <- c(Var_L, Vol_L),
.name_repair = ~ c("Varianza de Largo Plazo", "Volatilidad de Largo Plazo"))
#parGarch11
# Obteniendo volatilidad a largo plazo
Var_L = as.numeric(parGarch11[2])/as.numeric(1-parGarch11[3]-parGarch11[4])
Var_L
Vol_L = sqrt(Var_L)
Vol_L
resumen <- tibble(VV_L <- c(Var_L, Vol_L),
.name_repair = ~ c("Varianza de Largo Plazo", "Volatilidad de Largo Plazo"))
#parGarch11
# Obteniendo volatilidad a largo plazo
Var_L = as.numeric(parGarch11[2])/as.numeric(1-parGarch11[3]-parGarch11[4])
Var_L
Vol_L = sqrt(Var_L)
Vol_L
#parGarch11
# Obteniendo volatilidad a largo plazo
Var_L = as.numeric(parGarch11[2])/as.numeric(1-parGarch11[3]-parGarch11[4])
Var_L
Vol_L = sqrt(Var_L)
Vol_L
Rendimiento2 <- Rendimiento**2
Var_Real<-Rendimiento**2
Var_Est_GARCH <- garch11@h.t
Resultados2 <- merge.xts(Var_Real, Var_Est_GARCH)
names(Resultados2) <- c('Var_Real','Var_Est_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', lwd=c(.4,.8), col=c('blue','red'))
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
library(PerformanceAnalytics)
library(fBasics)
library(akima)
library(normtest)
library(crop)
library(lubridate)
library(tibble)
library(ggplot2)
library(fTrading)
library(fGarch)
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
Rendimiento<-na.omit(diff(log(precio)))
independencia <- Box.test(precio,lag=1,type="Ljung-Box",fitdf = 0)
independencia$statistic
garch11 <- garchFit(formula = ~garch(1,1),data = Rendimiento, cond.dist = "norm")
garch12 <- garchFit(formula = ~garch(1,2),data = Rendimiento, cond.dist = "norm")
garch21 <- garchFit(formula = ~garch(2,1),data = Rendimiento, cond.dist = "norm")
garch22 <- garchFit(formula = ~garch(2,2),data = Rendimiento, cond.dist = "norm")
garch10 <- garchFit(formula = ~garch(1,0),data = Rendimiento, cond.dist = "norm")
garch20 <- garchFit(formula = ~garch(2,0),data = Rendimiento, cond.dist = "norm")
resumen <- tibble(GARCH_Model <- c(garch11, garch12, garch21, garch22, garch10, garch20),
.name_repair = ~ c("GARCH11", "GARCH12", "GARCH21", "GARCH22", "GARCH10", "GARCH20"))
parGarch11 <- garch11@fit[["par"]]
parGarch12 <- garch12@fit[["par"]]
parGarch21 <- garch21@fit[["par"]]
parGarch22 <- garch22@fit[["par"]]
parGarch10 <- garch10@fit[["par"]]
parGarch20 <- garch20@fit[["par"]]
icsGarch11 <- garch11@fit[["ics"]]
icsGarch12 <- garch12@fit[["ics"]]
icsGarch21 <- garch21@fit[["ics"]]
icsGarch22 <- garch22@fit[["ics"]]
icsGarch10 <- garch10@fit[["ics"]]
icsGarch20 <- garch20@fit[["ics"]]
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo <- sort(AICoptimo)
AICoptimo
icsGarch11
#parGarch11
# Obteniendo volatilidad a largo plazo
Var_L = as.numeric(parGarch11[2])/as.numeric(1-parGarch11[3]-parGarch11[4])
Var_L
Vol_L = sqrt(Var_L)
Vol_L
vLGarch11 <- garch11@fit[["value"]][["LogLikelihood"]]
vLGarch12 <- garch12@fit[["value"]][["LogLikelihood"]]
vLGarch21 <- garch21@fit[["value"]][["LogLikelihood"]]
vLGarch22 <- garch22@fit[["value"]][["LogLikelihood"]]
vLGarch10 <- garch10@fit[["value"]][["LogLikelihood"]]
vLGarch20 <- garch20@fit[["value"]][["LogLikelihood"]]
Rendimiento2 <- Rendimiento**2
Var_Real<-Rendimiento**2
Var_Est_GARCH <- garch11@h.t
Resultados2 <- merge.xts(Var_Real, Var_Est_GARCH)
names(Resultados2) <- c('Var_Real','Var_Est_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', lwd=c(.4,.8), col=c('blue','red'))
Vol_Real<-sqrt(Var_Real)
Vol_Est_GARCH <- sqrt(Var_Est_GARCH)
Resultados2 <- merge.xts(Vol_Real, Vol_Est_GARCH)
names(Resultados2) <- c('Vol_Real','Vol_Est_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', lwd=c(.4,.8), col=c('blue','red'))
Est_Fut_GARCH <- (predict(garch11, n.ahead = 1))
Est_Fut_GARCH
#as.numeric(Est_Fut_GARCH[3])
n <- nrow(Rendimiento)
Fecha_Est_Fut <- date(Rendimiento[n,])+1
Fecha_Est_Fut
n <- nrow(Var_Real)
mavback <- function(x,n){ filter(x, c(0, rep(1/n,n)), sides=1) }
Var_Est5<-xts(mavback(Var_Real, n=5), order.by = date(Var_Real))
Var_Est10<-xts(mavback(Var_Real, n=10), order.by = date(Var_Real))
Var_Est20<-xts(mavback(Var_Real, n=20), order.by = date(Var_Real))
Var_Est40<-xts(mavback(Var_Real, n=40), order.by = date(Var_Real))
Var_Est<-merge.xts(Var_Est5, Var_Est10, Var_Est20, Var_Est40)
Var_Est<-merge.xts(Var_Est5, Var_Est10, Var_Est20, Var_Est40)
names(Var_Est)<-c("M5","M10","M20","M40")
plot(Var_Est, legend.loc="top", main = "Estimaciones de la Varianza", lwd=.5)
Dif_Est<-merge.xts((Var_Real-Var_Est5)^2,(Var_Real-Var_Est10)^2, (Var_Real-Var_Est20)^2, (Var_Real-Var_Est40)^2)
names(Dif_Est)<-c("5","10","20","40")
plot(Dif_Est, legend.loc = "bottom", main="Diferencias en la estimación", lwd=.5)
RMSE<-as.data.frame(sqrt(colMeans(na.omit(Dif_Est))))
names(RMSE)<-c("RMSE")
RMSE
M_opt<-subset(RMSE, RMSE==min(RMSE))
m<-as.numeric(row.names(M_opt))
m
if(m==5){Var_Opt<-Var_Est5}
if(m==10){Var_Opt<-Var_Est10}
if(m==20){Var_Opt<-Var_Est20}
if(m==40){Var_Opt<-Var_Est40}
Vol_Est_PM = sqrt(Var_Opt)
n <- nrow(Var_Real)
Var_Est <- matrix(0,n-1,1)
a <- seq(0.1,0.99,by=0.01)
Var_Est[1,1] <- Var_Real[1,1]
Func <- matrix(0,n-1,1)
Resultados <- matrix(0,length(a),2)
colnames(Resultados) <- c('Lambda', 'Sum_FMV')
j <- 0
for (L in a) {
for (i in 2:(n-1)) {
Var_Est[i,1] <- (1-L)*Var_Real[i-1,1] + L*Var_Est[i-1,1] #modelo EWMA
Func[i,1] <- - log(Var_Est[i-1,1]) - Var_Real[i-1,1] / Var_Est[i-1,1]
}
j <- j+1
FMaxAct <- sum(Func)
Resultados[j,1] <- L
Resultados[j,2] <- FMaxAct
}
L_opt <- Resultados[order(Resultados[,'Sum_FMV'], decreasing = TRUE),]
L_opt <- as.numeric(L_opt[1,1])
Var_Est_EWMA <- xts(emaTA(Var_Real, lambda = L_opt), order.by= date(Rendimiento))
Vol_Est_EWMA <- sqrt(Var_Est_EWMA)
Resultados2 <- merge.xts(Vol_Est_PM, Vol_Est_EWMA, Vol_Est_GARCH)
names(Resultados2) <- c('Vol_PM','Vol_EWMA','Vol_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', lwd=c(.4,.8), col=c('blue','red', 'green'))
Est_Fut_GARCH <- (predict(garch11, n.ahead = 1))
as.numeric(Est_Fut_GARCH[3])
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
Rendimiento<-na.omit(diff(log(precio)))
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
Rendimiento<-na.omit(diff(log(precio)))
Rendimiento
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
Rendimiento<-na.omit(diff(log(precio)))
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
Rendimiento<-na.omit(diff(log(precio)))
independencia <- Box.test(precio,lag=1,type="Ljung-Box",fitdf = 0)
independencia$statistic
garch11 <- garchFit(formula = ~garch(1,1),data = Rendimiento, cond.dist = "norm")
garch12 <- garchFit(formula = ~garch(1,2),data = Rendimiento, cond.dist = "norm")
garch21 <- garchFit(formula = ~garch(2,1),data = Rendimiento, cond.dist = "norm")
garch22 <- garchFit(formula = ~garch(2,2),data = Rendimiento, cond.dist = "norm")
garch10 <- garchFit(formula = ~garch(1,0),data = Rendimiento, cond.dist = "norm")
garch20 <- garchFit(formula = ~garch(2,0),data = Rendimiento, cond.dist = "norm")
parGarch11 <- garch11@fit[["par"]]
parGarch12 <- garch12@fit[["par"]]
parGarch21 <- garch21@fit[["par"]]
parGarch22 <- garch22@fit[["par"]]
parGarch10 <- garch10@fit[["par"]]
parGarch20 <- garch20@fit[["par"]]
icsGarch11 <- garch11@fit[["ics"]]
icsGarch12 <- garch12@fit[["ics"]]
icsGarch21 <- garch21@fit[["ics"]]
icsGarch22 <- garch22@fit[["ics"]]
icsGarch10 <- garch10@fit[["ics"]]
icsGarch20 <- garch20@fit[["ics"]]
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo <- sort(AICoptimo)
AICoptimo
icsGarch11
#parGarch11
# Obteniendo volatilidad a largo plazo
Var_L = as.numeric(parGarch11[2])/as.numeric(1-parGarch11[3]-parGarch11[4])
Var_L
Vol_L = sqrt(Var_L)
Vol_L
vLGarch11 <- garch11@fit[["value"]][["LogLikelihood"]]
vLGarch12 <- garch12@fit[["value"]][["LogLikelihood"]]
vLGarch21 <- garch21@fit[["value"]][["LogLikelihood"]]
vLGarch22 <- garch22@fit[["value"]][["LogLikelihood"]]
vLGarch10 <- garch10@fit[["value"]][["LogLikelihood"]]
vLGarch20 <- garch20@fit[["value"]][["LogLikelihood"]]
Rendimiento2 <- Rendimiento**2
Var_Real<-Rendimiento**2
Var_Est_GARCH <- garch11@h.t
Resultados2 <- merge.xts(Var_Real, Var_Est_GARCH)
names(Resultados2) <- c('Var_Real','Var_Est_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', lwd=c(.4,.8), col=c('blue','red'))
Vol_Real<-sqrt(Var_Real)
Vol_Est_GARCH <- sqrt(Var_Est_GARCH)
Resultados2 <- merge.xts(Vol_Real, Vol_Est_GARCH)
names(Resultados2) <- c('Vol_Real','Vol_Est_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', lwd=c(.4,.8), col=c('blue','red'))
Est_Fut_GARCH <- (predict(garch11, n.ahead = 1))
as.numeric(Est_Fut_GARCH[3])
n <- nrow(Rendimiento)
Fecha_Est_Fut <- date(Rendimiento[n,])+1
Fecha_Est_Fut
n <- nrow(Var_Real)
mavback <- function(x,n){ filter(x, c(0, rep(1/n,n)), sides=1) }
Var_Est5<-xts(mavback(Var_Real, n=5), order.by = date(Var_Real))
Var_Est10<-xts(mavback(Var_Real, n=10), order.by = date(Var_Real))
Var_Est20<-xts(mavback(Var_Real, n=20), order.by = date(Var_Real))
Var_Est40<-xts(mavback(Var_Real, n=40), order.by = date(Var_Real))
Var_Est<-merge.xts(Var_Est5, Var_Est10, Var_Est20, Var_Est40)
Var_Est<-merge.xts(Var_Est5, Var_Est10, Var_Est20, Var_Est40)
names(Var_Est)<-c("M5","M10","M20","M40")
plot(Var_Est, legend.loc="top", main = "Estimaciones de la Varianza", lwd=.5)
Dif_Est<-merge.xts((Var_Real-Var_Est5)^2,(Var_Real-Var_Est10)^2, (Var_Real-Var_Est20)^2, (Var_Real-Var_Est40)^2)
names(Dif_Est)<-c("5","10","20","40")
plot(Dif_Est, legend.loc = "bottom", main="Diferencias en la estimación", lwd=.5)
RMSE<-as.data.frame(sqrt(colMeans(na.omit(Dif_Est))))
names(RMSE)<-c("RMSE")
RMSE
M_opt<-subset(RMSE, RMSE==min(RMSE))
m<-as.numeric(row.names(M_opt))
m
if(m==5){Var_Opt<-Var_Est5}
if(m==10){Var_Opt<-Var_Est10}
if(m==20){Var_Opt<-Var_Est20}
if(m==40){Var_Opt<-Var_Est40}
Vol_Est_PM = sqrt(Var_Opt)
n <- nrow(Var_Real)
Var_Est <- matrix(0,n-1,1)
a <- seq(0.1,0.99,by=0.01)
Var_Est[1,1] <- Var_Real[1,1]
Func <- matrix(0,n-1,1)
Resultados <- matrix(0,length(a),2)
colnames(Resultados) <- c('Lambda', 'Sum_FMV')
j <- 0
for (L in a) {
for (i in 2:(n-1)) {
Var_Est[i,1] <- (1-L)*Var_Real[i-1,1] + L*Var_Est[i-1,1] #modelo EWMA
Func[i,1] <- - log(Var_Est[i-1,1]) - Var_Real[i-1,1] / Var_Est[i-1,1]
}
j <- j+1
FMaxAct <- sum(Func)
Resultados[j,1] <- L
Resultados[j,2] <- FMaxAct
}
L_opt <- Resultados[order(Resultados[,'Sum_FMV'], decreasing = TRUE),]
L_opt <- as.numeric(L_opt[1,1])
Var_Est_EWMA <- xts(emaTA(Var_Real, lambda = L_opt), order.by= date(Rendimiento))
Vol_Est_EWMA <- sqrt(Var_Est_EWMA)
Resultados2 <- merge.xts(Vol_Est_PM, Vol_Est_EWMA, Vol_Est_GARCH)
names(Resultados2) <- c('Vol_PM','Vol_EWMA','Vol_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', lwd=c(.4,.8), col=c('blue','red', 'green'))
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
Rendimiento<-na.omit(diff(log(precio)))
garch11 <- garchFit(formula = ~garch(1,1),data = Rendimiento, cond.dist = "norm")
garch12 <- garchFit(formula = ~garch(1,2),data = Rendimiento, cond.dist = "norm")
garch21 <- garchFit(formula = ~garch(2,1),data = Rendimiento, cond.dist = "norm")
garch22 <- garchFit(formula = ~garch(2,2),data = Rendimiento, cond.dist = "norm")
garch10 <- garchFit(formula = ~garch(1,0),data = Rendimiento, cond.dist = "norm")
garch20 <- garchFit(formula = ~garch(2,0),data = Rendimiento, cond.dist = "norm")
garch11 <- garchFit(formula = ~garch(1,1),data = Rendimiento, cond.dist = "norm")
garch12 <- garchFit(formula = ~garch(1,2),data = Rendimiento, cond.dist = "norm")
garch21 <- garchFit(formula = ~garch(2,1),data = Rendimiento, cond.dist = "norm")
garch22 <- garchFit(formula = ~garch(2,2),data = Rendimiento, cond.dist = "norm")
garch10 <- garchFit(formula = ~garch(1,0),data = Rendimiento, cond.dist = "norm")
garch20 <- garchFit(formula = ~garch(2,0),data = Rendimiento, cond.dist = "norm")
parGarch11 <- garch11@fit[["par"]]
parGarch12 <- garch12@fit[["par"]]
parGarch21 <- garch21@fit[["par"]]
parGarch22 <- garch22@fit[["par"]]
parGarch10 <- garch10@fit[["par"]]
parGarch20 <- garch20@fit[["par"]]
icsGarch11 <- garch11@fit[["ics"]]
icsGarch12 <- garch12@fit[["ics"]]
icsGarch21 <- garch21@fit[["ics"]]
icsGarch22 <- garch22@fit[["ics"]]
icsGarch10 <- garch10@fit[["ics"]]
icsGarch20 <- garch20@fit[["ics"]]
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo <- sort(AICoptimo)
AICoptimo
icsGarch11
VaVo_L <- as.data.frame(Var_L, Vol_L)
names(VaVo_L) <- c("Var L", "Vol L")
VaVo_L <- as.data.frame(Var_L, Vol_L)
names(VaVo_L) <- c(["Var L", "Vol L"])
VaVo_L <- as.data.frame(Var_L, Vol_L)
VaVo_L
Resultados2 <- merge.xts(Vol_Est_PM, Vol_Est_EWMA, Vol_Est_GARCH)
names(Resultados2) <- c('Vol_PM','Vol_EWMA','Vol_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', main ='Volatilidades de los 3 modelos', lwd=c(.4,.8), col=c('blue','red', 'green'))
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
library(PerformanceAnalytics)
library(fBasics)
library(akima)
library(normtest)
library(crop)
library(lubridate)
library(tibble)
library(ggplot2)
library(fTrading)
library(fGarch)
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
library(PerformanceAnalytics)
library(fBasics)
library(akima)
library(normtest)
library(crop)
library(lubridate)
library(tibble)
library(ggplot2)
library(fTrading)
library(fGarch)
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
library(PerformanceAnalytics)
library(fBasics)
library(akima)
library(normtest)
library(crop)
library(lubridate)
library(tibble)
library(ggplot2)
library(fTrading)
library(fGarch)
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
